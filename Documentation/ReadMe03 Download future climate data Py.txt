ReadMe for “Read future climate data.py”The following ReadMe provides a brief overview of how to use “Read future climate data.py”. I first outline how to download the required cdsapi Python module that allows climate data to be downloaded from the Copernicus Climate Data Store. I then give the minimum instructions to allow a user to run the Python script to read future climate data for any location in “Climate station data.xlsx” or for any new location, with small modifications to the script. Please note that running this script is not strictly necessary for the populations analyzed in the manuscript as all climate data already exists in the “Climate data” folder.We obtained CMIP6 climate model projections (O’Neill et al. 2016) of daily maximum and minima near-surface air temperatures for the years 2025-2100 using the Copernicus Climate Data Store (cds.climate.copernicus.eu), under the CMIP6 licensing agreement. We used the Shared Socioeconomic Pathway experiments SSP3-7.0 scenario and used the CESM2 model from the National Center for Atmospheric Research (Danabasoglu 2019).Downloading cdsapi module for accessing climate data from the Copernicus Climate Data Store(See: https://confluence.ecmwf.int/display/CKB/How+to+install+and+use+CDS+API+on+macOS)1. Login to CDS2. Go to https://cds.climate.copernicus.eu/api-how-to and copy the 2 line code displayed in the black box in the "Install the CDS API key" section3. Create your key file in your home directory in your Terminal window: touch ~/.cdsapirc 4. Edit your key file and paste the two lines you copied in Step 2 above to your .cdsapirc key file5. Install the CDS API client in your Terminal window: pip3 install cdsapiRead future climate data.pyInput: User-defined latitude, longitude, location for climate data (from “Climate station data.xlsx” or new location)Output: CSV files for daily maximum and minimum near-surface air temperatures (“Future Tmax <location>.csv” and “Future Tmin <location>.csv”)To run:1. Download cdsapi module (see above)2. Login to CDS3. In “Read future climate data.py”, set path to “Climate data” folder of downloaded GitHub repo (line 20)4. Update variables lat, lon, and loc (lines 23-25) with the latitude, longitude, and location from “Climate station data.xlsx” (NOTE: use the “Latitude” column for the latitude of the insect population as in the manuscript or the “Lat” column for the latitude of the historical climate station)5. Run the script (by pressing the green right-arrow in Spyder)Potential issues:* If console yields “WARNING Recovering from HTTP error [500 Internal Server Error]”, then try refreshing browser or logging into https://cds.climate.copernicus.eu/#!/home* Remember to specify the full path to the appropriate folder on line 20* The variables lat and lon are required to delineate the region of the world over which the climate data is extracted, while loc is simply for naming the assembled CSV files (be careful with spelling, however, because these files are used by other scripts)Script details:Lines 6-16	Load required packagesLines 19-25	Have user enter required informationLines 29-35	Set working directory and get names of downloaded filesLines 38-84	Download and process daily maximum temperatures (Tmax)       Lines 39-55	Retrieve Tmax data from Climate Data Store       Lines 57-66	Extract files from zip, open netCDF4 files, and extract variable Tmax       Lines 68-84	Get dimensions, extract data, and save Tmax data to CSVLines 87-133	Download and process daily maximum temperatures (Tmin)       Lines 88-104 	Retrieve Tmin data from Climate Data Store       Lines 106-115	Extract files from zip, open netCDF4 files, and extract variable Tmin       Lines 117-133	Get dimensions, extract data, and save Tmin data to CSVLines 135-142	Remove Climate Data Store filesReferences:Danabasoglu, G. 2019. NCAR CESM2 model output prepared for CMIP6 CMIP. Version 20211203. Earth System Grid Federation.O’Neill, B. C., C. Tebaldi, D. P. Van Vuuren, V. Eyring, P. Friedlingstein, G. Hurtt, R. Knutti, et al. 2016. The Scenario Model Intercomparison Project (ScenarioMIP) for CMIP6. Geoscientific Model Development 9:3461–3482.